/* tslint:disable */
/* eslint-disable */
/**
 * My API
 * This is a sample API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddStoreInformation
 */
export interface AddStoreInformation {
    /**
     * 
     * @type {number}
     * @memberof AddStoreInformation
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof AddStoreInformation
     */
    shopName: string;
    /**
     * 
     * @type {string}
     * @memberof AddStoreInformation
     */
    address: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AddStoreInformation
     */
    brands: Array<string>;
}

/**
 * Check if a given object implements the AddStoreInformation interface.
 */
export function instanceOfAddStoreInformation(value: object): value is AddStoreInformation {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('shopName' in value) || value['shopName'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('brands' in value) || value['brands'] === undefined) return false;
    return true;
}

export function AddStoreInformationFromJSON(json: any): AddStoreInformation {
    return AddStoreInformationFromJSONTyped(json, false);
}

export function AddStoreInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddStoreInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'shopName': json['shop_name'],
        'address': json['address'],
        'brands': json['brands'],
    };
}

export function AddStoreInformationToJSON(json: any): AddStoreInformation {
    return AddStoreInformationToJSONTyped(json, false);
}

export function AddStoreInformationToJSONTyped(value?: AddStoreInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'shop_name': value['shopName'],
        'address': value['address'],
        'brands': value['brands'],
    };
}

